{"version":3,"file":"static/js/685.69c79c36.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/api.js","pages/MovieDetails/MovieDetails.styled.js","components/StarRating/Star.styled.js","components/StarRating/Star.js","components/StarRating/StarRating.styled.js","components/StarRating/StarRating.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { FaStar } from \"react-icons/fa\";\n\nexport const MoviesMenu = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: start;\n  gap: 2.4rem;\n  padding: 1.2rem 2.4rem;\n`;\n\nexport const MoviesItems = styled.li`\n  border-radius: 0.4rem;\n  overflow: hidden;\n\n  @media (max-width: 520px) {\n    display: block;\n    width: 40rem;\n    height: 60rem;\n  }\n`;\n\nexport const MoviesWrap = styled.div`\n  /* background-color: ${(p) => p.theme.colors.darkBgColor}; */\n  background-color: ${(p) => p.theme.colors.moviesWrapDarkColor};\n\n  border-radius: 0.4rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: hidden;\n  width: 20rem;\n  height: 36rem;\n\n  @media (max-width: 520px) {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const MoviesTextWrap = styled.div`\n  padding: 2.4rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  /* align-items: center; */\n  justify-content: start;\n`;\n\nexport const MoviesTextTitle = styled.span`\n  color: ${(p) => p.theme.colors.lightTextColor};\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.6rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.16;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  /* border-bottom: 1px solid transparent; */\n\n  &:hover {\n    text-decoration: underline;\n    /* border-bottom: 1px solid #050505; */\n  }\n\n  @media (max-width: 520px) {\n    font-size: 2.4rem;\n  }\n`;\n\nexport const MoviesImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Rating = styled.span`\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.white : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: 500;\n  line-height: 1.25;\n`;\n\nexport const RatingIcon = styled(FaStar)`\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.accent : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n`;\n\nexport const RatingWrapper = styled.div`\n  display: flex;\n  gap: 0.8rem;\n  align-items: center;\n`;\n","import axios from \"axios\";\n\n// https://api.themoviedb.org/3/movie/550?api_key=96525b58fad95f33b6786cec803d2857\n\n// const options = {};\n\nconst URL = \"https://api.themoviedb.org/3\";\n// const URL = \"https://api.themoviedb.org\";\nconst KEY = \"96525b58fad95f33b6786cec803d2857\";\n\nexport default async function getApi() {\n  const data = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n\n  return data.data;\n}\n\nexport async function apiSearchMovies(query, page) {\n  const data = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n\n  return data.data;\n}\n\nexport async function apiMoviesById(id) {\n  const data = await axios.get(`${URL}/movie/${id}?api_key=${KEY}`);\n\n  return data.data;\n}\n","import styled from \"styled-components\";\n\nexport const DetailsContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2.4rem;\n  background: linear-gradient(to bottom, #e9ecef 10%, #343a40);\n`;\n\nexport const DetailsCard = styled.div`\n  display: flex;\n  width: 60%;\n  gap: 2.4rem;\n  border: 0.1rem solid ${(p) => p.theme.colors.btnBgColor};\n  padding: 2.4rem;\n  border-radius: 1.2rem;\n  box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.2);\n\n  @media (max-width: 1450px) {\n    width: 80%;\n  }\n  @media (max-width: 1000px) {\n    width: 90%;\n  }\n  @media (max-width: 630px) {\n    width: 100%;\n  }\n  @media (max-width: 550px) {\n    flex-direction: column;\n  }\n`;\n\nexport const DetailsTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.4rem;\n  /* width: 48rem; */\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  width: 24rem;\n  height: 36rem;\n  /* height: auto; */\n`;\n\nexport const DetailsTitle = styled.h2`\n  color: ${(p) => p.theme.colors.darkBgColor};\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 3.6rem;\n  font-weight: 600;\n  line-height: 1.2;\n  text-transform: uppercase;\n\n  @media (max-width: 1200px) {\n    font-size: 2.4rem;\n  }\n`;\n\nexport const DetailsGenre = styled.span`\n  color: #050505;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.4rem;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const GenresWrapper = styled.div`\n  display: flex;\n  gap: 1.2rem;\n`;\n\nexport const Genre = styled.span`\n  overflow: hidden;\n  color: rgba(5, 5, 5, 0.7);\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.4rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.4; /* 140% */\n`;\n\nexport const MovieDetailsText = styled.p`\n  color: ${(p) => p.theme.colors.darkBgColor};\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.4rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.28;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const DetailsRating = styled.span`\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.darkBgColor : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: 600;\n  line-height: 1.25;\n`;\n","import styled from \"styled-components\";\nimport { BsStar, BsStarFill } from \"react-icons/bs\";\n\nexport const FullStar = styled(BsStarFill)`\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.accent : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n`;\nexport const EmptyStar = styled(BsStar)`\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.accent : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n`;\n","import { FullStar, EmptyStar } from \"./Star.styled\";\n\nexport default function Star({ full, value }) {\n  return <>{full ? <FullStar value={value} /> : <EmptyStar value={value} />}</>;\n}\n","import styled from \"styled-components\";\n\nexport const StarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  gap: 0.1rem;\n`;\nexport const StarText = styled.p`\n  margin-left: 0.7rem;\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.darkBgColor : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: 600;\n  line-height: 1.25;\n`;\nexport const StarTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  width: 100%;\n`;\n","import PropTypes from \"prop-types\";\nimport Star from \"./Star\";\nimport { StarContainer, StarText, StarTextWrapper } from \"./StarRating.styled\";\n\nStarRating.propTypes = {\n  maxRating: PropTypes.number.isRequired,\n  color: PropTypes.string,\n  size: PropTypes.number,\n  messages: PropTypes.array,\n  defaultRating: PropTypes.number,\n  onSetTextStarsRate: PropTypes.func,\n};\n\nexport default function StarRating({ rating, maxRating, value }) {\n  return (\n    <StarTextWrapper>\n      <StarContainer>\n        {Array.from({ length: maxRating }, (_, i) => (\n          <Star\n            value={value}\n            key={crypto.randomUUID()}\n            full={rating ? rating >= i + 1 : rating >= i + 1 ? true : false}\n          />\n        ))}\n        <StarText value={rating}>{rating}</StarText>\n      </StarContainer>\n    </StarTextWrapper>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  DetailsContainer,\n  DetailsCard,\n  DetailsTextWrapper,\n  Img,\n  DetailsTitle,\n  DetailsGenre,\n  GenresWrapper,\n  Genre,\n  MovieDetailsText,\n  TextWrapper,\n  DetailsRating,\n} from \"./MovieDetails.styled\";\nimport {\n  RatingWrapper,\n  RatingIcon,\n} from \"../../components/MoviesList/MoviesList.styled\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { apiMoviesById } from \"../../components/api\";\nimport StarRating from \"../../components/StarRating/StarRating\";\n\nexport default function Details() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function getMoviesById() {\n      const movie = await apiMoviesById(movieId);\n      console.log(movie);\n      setMovies(movie);\n    }\n    getMoviesById();\n  }, [movieId, setMovies]);\n\n  function formatNumber(number) {\n    if (number % 1 === 0) {\n      return Math.floor(number);\n    } else {\n      return number;\n    }\n  }\n\n  const { title, genres, overview, release_date, poster_path, vote_average } =\n    movies;\n  return (\n    <DetailsContainer>\n      <DetailsCard>\n        <>\n          <Img\n            src={\n              poster_path\n                ? `\nhttp://image.tmdb.org/t/p/w200${poster_path}`\n                : `${process.env.PUBLIC_URL}/images/noImage.webp`\n            }\n            alt={title}\n          />\n        </>\n        <DetailsTextWrapper>\n          <DetailsTitle>{title}</DetailsTitle>\n          <TextWrapper>\n            <DetailsGenre>Genres:</DetailsGenre>\n            <GenresWrapper>\n              {genres === undefined ? (\n                \"\"\n              ) : (\n                <>\n                  {genres.map(({ name }) => (\n                    <Genre key={name}>{name}</Genre>\n                  ))}\n                </>\n              )}\n            </GenresWrapper>\n          </TextWrapper>\n          <TextWrapper>\n            <DetailsGenre>Release Date:</DetailsGenre>\n            <Genre>{release_date}</Genre>\n          </TextWrapper>\n          <StarRating\n            maxRating={10}\n            rating={\n              vote_average !== undefined &&\n              formatNumber(vote_average.toFixed(1))\n            }\n            value={\n              vote_average !== undefined &&\n              formatNumber(vote_average.toFixed(1))\n            }\n          />\n          <TextWrapper>\n            <DetailsGenre>Overview:</DetailsGenre>\n            <MovieDetailsText>{overview}</MovieDetailsText>\n          </TextWrapper>\n        </DetailsTextWrapper>\n      </DetailsCard>\n    </DetailsContainer>\n  );\n}\n"],"names":["MoviesMenu","styled","ul","_templateObject","_taggedTemplateLiteral","MoviesItems","li","_templateObject2","MoviesWrap","div","_templateObject3","p","theme","colors","darkBgColor","moviesWrapDarkColor","MoviesTextWrap","_templateObject4","MoviesTextTitle","span","_templateObject5","lightTextColor","MoviesImg","img","_templateObject6","Rating","_templateObject7","value","white","btnBgColor","RatingIcon","FaStar","_templateObject8","accent","RatingWrapper","_templateObject9","URL","KEY","getApi","_getApi","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","axios","get","concat","sent","abrupt","stop","apiSearchMovies","_x","_x2","_apiSearchMovies","_callee2","query","page","_context2","apiMoviesById","_x3","_apiMoviesById","_callee3","id","_context3","DetailsContainer","DetailsCard","DetailsTextWrapper","Img","DetailsTitle","h2","DetailsGenre","GenresWrapper","Genre","MovieDetailsText","TextWrapper","_templateObject10","_templateObject11","FullStar","BsStarFill","EmptyStar","BsStar","Star","_ref","full","_jsx","_Fragment","children","StarContainer","StarText","StarTextWrapper","StarRating","rating","maxRating","_jsxs","Array","from","length","_","i","crypto","randomUUID","Details","movieId","useParams","_useState","useLocation","useState","_useState2","_slicedToArray","movies","setMovies","formatNumber","number","Math","floor","useEffect","_getMoviesById","movie","console","log","getMoviesById","title","genres","overview","release_date","poster_path","vote_average","src","process","alt","undefined","map","name","toFixed"],"sourceRoot":""}