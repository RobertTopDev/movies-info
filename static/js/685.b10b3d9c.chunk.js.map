{"version":3,"file":"static/js/685.b10b3d9c.chunk.js","mappings":"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","sources":["components/api.js","components/StarRating/Star.styled.js","components/StarRating/Star.js","components/StarRating/StarRating.styled.js","components/StarRating/StarRating.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from \"axios\";\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"96525b58fad95f33b6786cec803d2857\";\n\nexport default async function getApi() {\n  const data = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n\n  return data.data;\n}\n\nexport async function apiSearchMovies(query, page) {\n  const data = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n\n  return data.data;\n}\n\nexport async function apiMoviesById(id) {\n  const data = await axios.get(`${URL}/movie/${id}?api_key=${KEY}`);\n\n  return data.data;\n}\n\nexport async function apiMoviesCast(id) {\n  const data = await axios.get(`${URL}/movie/${id}/credits?api_key=${KEY}`);\n\n  return data.data;\n}\nexport async function apiMoviesReviews(id) {\n  const data = await axios.get(`${URL}/movie/${id}/reviews?api_key=${KEY}`);\n\n  return data.data;\n}\n","import styled from \"styled-components\";\nimport { BsStar, BsStarFill } from \"react-icons/bs\";\n\nexport const FullStar = styled(BsStarFill)`\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.accent : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n`;\nexport const EmptyStar = styled(BsStar)`\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.accent : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n`;\n","import { FullStar, EmptyStar } from \"./Star.styled\";\n\nexport default function Star({ full, value }) {\n  return <>{full ? <FullStar value={value} /> : <EmptyStar value={value} />}</>;\n}\n","import styled from \"styled-components\";\n\nexport const StarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  gap: 0.1rem;\n`;\nexport const StarText = styled.p`\n  margin-left: 0.7rem;\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.darkBgColor : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: 600;\n  line-height: 1.25;\n`;\nexport const StarTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  width: 100%;\n`;\n","import PropTypes from \"prop-types\";\nimport Star from \"./Star\";\nimport { StarContainer, StarText, StarTextWrapper } from \"./StarRating.styled\";\n\nStarRating.propTypes = {\n  maxRating: PropTypes.number.isRequired,\n  color: PropTypes.string,\n  size: PropTypes.number,\n  messages: PropTypes.array,\n  defaultRating: PropTypes.number,\n  onSetTextStarsRate: PropTypes.func,\n};\n\nexport default function StarRating({ rating, maxRating, value }) {\n  return (\n    <StarTextWrapper>\n      <StarContainer>\n        {Array.from({ length: maxRating }, (_, i) => (\n          <Star\n            value={value}\n            key={crypto.randomUUID()}\n            full={rating ? rating >= i + 1 : rating >= i + 1 ? true : false}\n          />\n        ))}\n        <StarText value={rating}>{rating}</StarText>\n      </StarContainer>\n    </StarTextWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { BsArrowLeft, BsArrowRight } from \"react-icons/bs\";\n\nexport const DetailsContainer = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  padding: 4.8rem 2.4rem;\n  background: linear-gradient(to bottom, #e9ecef 10%, #343a40);\n`;\n\nexport const DetailsCard = styled.div`\n  position: relative;\n  display: flex;\n  width: 60%;\n  gap: 2.4rem;\n  border: 0.1rem solid ${(p) => p.theme.colors.btnBgColor};\n  padding: 2.4rem;\n  border-radius: 1.2rem;\n  box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.2);\n\n  @media (max-width: 1450px) {\n    width: 80%;\n  }\n  @media (max-width: 1000px) {\n    width: 90%;\n  }\n  @media (max-width: 630px) {\n    width: 100%;\n  }\n  @media (max-width: 550px) {\n    flex-direction: column;\n  }\n`;\n\nexport const DetailsTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.4rem;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  width: 24rem;\n  height: 36rem;\n`;\n\nexport const DetailsTitle = styled.h2`\n  color: ${(p) => p.theme.colors.darkBgColor};\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 3.6rem;\n  font-weight: 600;\n  line-height: 1.2;\n  text-transform: uppercase;\n\n  @media (max-width: 1200px) {\n    font-size: 2.4rem;\n  }\n`;\n\nexport const DetailsGenre = styled.span`\n  color: #050505;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.4rem;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const GenresWrapper = styled.div`\n  display: flex;\n  gap: 1.2rem;\n`;\n\nexport const Genre = styled.span`\n  overflow: hidden;\n  color: rgba(5, 5, 5, 0.7);\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.4rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.4;\n`;\n\nexport const MovieDetailsText = styled.p`\n  color: ${(p) => p.theme.colors.darkBgColor};\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.4rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.28;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const DetailsRating = styled.span`\n  color: ${(p) =>\n    p.value !== 0 ? p.theme.colors.darkBgColor : p.theme.colors.btnBgColor};\n  font-size: 1.6rem;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: 600;\n  line-height: 1.25;\n`;\n\nexport const BackLinkWrapper = styled.button`\n  position: absolute;\n  top: -3.4rem;\n  left: 2.4rem;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  cursor: pointer;\n  color: ${(p) => p.theme.colors.white};\n  display: flex;\n  align-items: center;\n  gap: 1.2rem;\n\n  &:hover {\n    border-bottom: 0.1rem solid #000;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  color: ${(p) => p.theme.colors.moviesWrapDarkColor};\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.6rem;\n  font-weight: 500;\n  line-height: 1.25;\n`;\n\nexport const BackArrow = styled(BsArrowLeft)`\n  font-size: 1.6rem;\n  color: ${(p) => p.theme.colors.darkBgColor};\n`;\n\nexport const CastIcon = styled(BsArrowRight)`\n  font-size: 1.6rem;\n  transition: 0.3s;\n`;\n\nexport const CastLink = styled(Link)`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: 0.4s ease-in-out;\n\n  color: #050505;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.4rem;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.2;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n  width: 10rem;\n\n  &:hover {\n    & > ${CastIcon} {\n      color: ${(p) => p.theme.colors.accent};\n      margin-left: 0.8rem;\n    }\n  }\n`;\n\nexport const CastMenu = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1.2rem;\n`;\n\nexport const CastItems = styled.li`\n  width: 100%;\n`;\n","import { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useParams, Outlet } from \"react-router-dom\";\nimport { apiMoviesById } from \"../../components/api\";\nimport StarRating from \"../../components/StarRating/StarRating\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  DetailsContainer,\n  DetailsCard,\n  DetailsTextWrapper,\n  Img,\n  DetailsTitle,\n  DetailsGenre,\n  GenresWrapper,\n  Genre,\n  MovieDetailsText,\n  TextWrapper,\n  BackLinkWrapper,\n  BackLink,\n  BackArrow,\n  CastLink,\n  CastMenu,\n  CastIcon,\n  CastItems,\n} from \"./MovieDetails.styled\";\n\nexport default function Details() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const backLinkLocationRef = useRef(location.state?.from ?? \"/movies\");\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function getMoviesById() {\n      try {\n        const movie = await apiMoviesById(movieId);\n        setMovies(movie);\n      } catch (error) {\n        toast.error(\"Oops, something went wrong! Reload this page!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n      }\n    }\n    getMoviesById();\n  }, [movieId]);\n\n  function formatNumber(number) {\n    if (number % 1 === 0) {\n      return Math.floor(number);\n    } else {\n      return number;\n    }\n  }\n\n  const {\n    title,\n    genres,\n    overview,\n    release_date,\n    poster_path,\n    vote_average,\n    id,\n  } = movies;\n  return (\n    <DetailsContainer>\n      <DetailsCard>\n        <>\n          <BackLinkWrapper>\n            <BackArrow />\n            <BackLink to={backLinkLocationRef.current}>Back to movies</BackLink>\n          </BackLinkWrapper>\n          <Img\n            src={\n              poster_path\n                ? `\nhttp://image.tmdb.org/t/p/w200${poster_path}`\n                : `${process.env.PUBLIC_URL}/images/noImage.webp`\n            }\n            alt={title}\n          />\n        </>\n        <DetailsTextWrapper>\n          <DetailsTitle>{title}</DetailsTitle>\n          <TextWrapper>\n            <DetailsGenre>Genres:</DetailsGenre>\n            <GenresWrapper>\n              {genres === undefined ? (\n                \"\"\n              ) : (\n                <>\n                  {genres.map(({ name }) => (\n                    <Genre key={name}>{name}</Genre>\n                  ))}\n                </>\n              )}\n            </GenresWrapper>\n          </TextWrapper>\n          <TextWrapper>\n            <DetailsGenre>Release Date:</DetailsGenre>\n            <Genre>{release_date}</Genre>\n          </TextWrapper>\n          <StarRating\n            maxRating={10}\n            rating={\n              vote_average !== undefined &&\n              formatNumber(vote_average.toFixed(1))\n            }\n            value={\n              vote_average !== undefined &&\n              formatNumber(vote_average.toFixed(1))\n            }\n          />\n          <TextWrapper>\n            <DetailsGenre>Overview:</DetailsGenre>\n            <MovieDetailsText>{overview}</MovieDetailsText>\n          </TextWrapper>\n          <CastMenu>\n            <CastItems>\n              <CastLink to={`/movies/${id}/cast`}>\n                Cast\n                <CastIcon />\n              </CastLink>\n            </CastItems>\n            <CastItems>\n              <CastLink to={`/movies/${id}/reviews`}>\n                Reviews\n                <CastIcon />\n              </CastLink>\n            </CastItems>\n          </CastMenu>\n          <Outlet />\n        </DetailsTextWrapper>\n      </DetailsCard>\n    </DetailsContainer>\n  );\n}\n"],"names":["URL","KEY","getApi","_getApi","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","axios","get","concat","sent","abrupt","stop","apiSearchMovies","_x","_x2","_apiSearchMovies","_callee2","query","page","_context2","apiMoviesById","_x3","_apiMoviesById","_callee3","id","_context3","apiMoviesCast","_x4","_apiMoviesCast","_callee4","_context4","apiMoviesReviews","_x5","_apiMoviesReviews","_callee5","_context5","FullStar","styled","BsStarFill","_templateObject","_taggedTemplateLiteral","p","value","theme","colors","accent","btnBgColor","EmptyStar","BsStar","_templateObject2","Star","_ref","full","_jsx","_Fragment","children","StarContainer","div","StarText","darkBgColor","StarTextWrapper","_templateObject3","StarRating","rating","maxRating","_jsxs","Array","from","length","_","i","crypto","randomUUID","DetailsContainer","DetailsCard","DetailsTextWrapper","Img","img","_templateObject4","DetailsTitle","h2","_templateObject5","DetailsGenre","span","_templateObject6","GenresWrapper","_templateObject7","Genre","_templateObject8","MovieDetailsText","_templateObject9","TextWrapper","_templateObject10","BackLinkWrapper","_templateObject11","button","_templateObject12","white","BackLink","Link","_templateObject13","moviesWrapDarkColor","BackArrow","BsArrowLeft","_templateObject14","CastIcon","BsArrowRight","_templateObject15","CastLink","_templateObject16","CastMenu","ul","_templateObject17","CastItems","li","_templateObject18","Details","_location$state$from","_location$state","movieId","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","movies","setMovies","backLinkLocationRef","useRef","state","formatNumber","number","Math","floor","useEffect","_getMoviesById","movie","t0","toast","error","position","autoClose","hideProgressBar","closeOnClick","progress","undefined","getMoviesById","title","genres","overview","release_date","poster_path","vote_average","to","current","src","process","alt","map","name","toFixed","Outlet"],"sourceRoot":""}