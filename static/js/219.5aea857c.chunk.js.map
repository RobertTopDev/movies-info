{"version":3,"file":"static/js/219.5aea857c.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastWrapper = styled.div``;\n\nexport const CastText = styled.span`\n  color: #050505;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.6rem;\n  font-weight: 400;\n`;\n\nexport const CastMenu = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 0.2rem;\n`;\n\nexport const CastItems = styled.li`\n  display: flex;\n\n  &:nth-child(even) {\n    background-color: #dee2e6;\n  }\n  &:nth-child(odd) {\n    background-color: #ced4da;\n  }\n`;\n\nexport const CastImage = styled.img`\n  width: 4.2rem;\n  height: 6.3rem;\n`;\n\nexport const CastTextWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 0.1rem;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  width: 100%;\n  padding: 0 1.2rem;\n`;\n\nexport const CastChar = styled.span`\n  color: #050505;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.6rem;\n  font-weight: 400;\n`;\n\nexport const CastCharAs = styled.span`\n  color: rgba(5, 5, 5, 0.5);\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1.4rem;\n  font-weight: 400;\n`;\n","import { apiMoviesCast } from \"../api\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport {\n  CastText,\n  CastMenu,\n  CastItems,\n  CastImage,\n  CastTextWrapper,\n  CastChar,\n  CastCharAs,\n} from \"./Cast.styled\";\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function getMoviesCast() {\n      try {\n        const movie = await apiMoviesCast(movieId);\n        setCast(movie.cast);\n      } catch (error) {\n        toast.error(\"Oops, something went wrong! Reload this page!\");\n      }\n    }\n    getMoviesCast();\n  }, [setCast, movieId]);\n\n  return (\n    <CastMenu>\n      {cast &&\n        cast.map(({ cast_id, profile_path, title, name, character }) => (\n          <CastItems key={cast_id}>\n            <CastImage\n              src={\n                profile_path\n                  ? `\nhttp://image.tmdb.org/t/p/w200${profile_path}`\n                  : `${process.env.PUBLIC_URL}/images/noProfile.jpg`\n              }\n              alt={title}\n            />\n            <CastTextWrapper>\n              <CastText>{name}</CastText>\n              <CastChar>\n                <CastCharAs>as</CastCharAs> {character}\n              </CastChar>\n            </CastTextWrapper>\n          </CastItems>\n        ))}\n      <Toaster position=\"top-right\" />\n    </CastMenu>\n  );\n}\n","import axios from \"axios\";\n\n// https://api.themoviedb.org/3/movie/550?api_key=96525b58fad95f33b6786cec803d2857\n\n// const options = {};\n\nconst URL = \"https://api.themoviedb.org/3\";\n// const URL = \"https://api.themoviedb.org\";\nconst KEY = \"96525b58fad95f33b6786cec803d2857\";\n\nexport default async function getApi() {\n  const data = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n\n  return data.data;\n}\n\nexport async function apiSearchMovies(query, page) {\n  const data = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n\n  return data.data;\n}\n\nexport async function apiMoviesById(id) {\n  const data = await axios.get(`${URL}/movie/${id}?api_key=${KEY}`);\n\n  return data.data;\n}\n\nexport async function apiMoviesCast(id) {\n  const data = await axios.get(`${URL}/movie/${id}/credits?api_key=${KEY}`);\n\n  return data.data;\n}\nexport async function apiMoviesReviews(id) {\n  const data = await axios.get(`${URL}/movie/${id}/reviews?api_key=${KEY}`);\n\n  return data.data;\n}\n"],"names":["CastText","styled","div","_templateObject","_taggedTemplateLiteral","span","_templateObject2","CastMenu","ul","_templateObject3","CastItems","li","_templateObject4","CastImage","img","_templateObject5","CastTextWrapper","_templateObject6","CastChar","_templateObject7","CastCharAs","_templateObject8","Cast","movieId","useParams","_useState","useLocation","useState","_useState2","_slicedToArray","cast","setCast","useEffect","_getMoviesCast","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movie","wrap","_context","prev","next","apiMoviesCast","sent","t0","toast","error","stop","apply","arguments","getMoviesCast","_jsxs","children","map","_ref","cast_id","profile_path","title","name","character","_jsx","src","concat","process","alt","Toaster","position","URL","KEY","getApi","_getApi","data","axios","get","abrupt","apiSearchMovies","_x","_x2","_apiSearchMovies","_callee2","query","page","_context2","apiMoviesById","_x3","_apiMoviesById","_callee3","id","_context3","_x4","_apiMoviesCast","_callee4","_context4","apiMoviesReviews","_x5","_apiMoviesReviews","_callee5","_context5"],"sourceRoot":""}